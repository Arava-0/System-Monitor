NAME := monitoring-tool
ENTRYPOINT := main.js
PID_FILE := $(NAME).pid
LOG_FILE := $(NAME).log
MAX_LOG_LINES := 1000
TRUNCATE_TO := 500

start: ## D√©marre le script.
	@echo "‚ñ∂Ô∏è  D√©marrage du script $(NAME)..."
	@if [ -f $(PID_FILE) ]; then \
		echo "‚ùå Le script semble d√©j√† en cours d'ex√©cution (PID: $$(cat $(PID_FILE)))"; \
		exit 1; \
	fi
	@if [ -f $(LOG_FILE) ] && [ $$(wc -l < $(LOG_FILE)) -gt $(MAX_LOG_LINES) ]; then \
		echo "‚úÇÔ∏è  Le fichier de log d√©passe $(MAX_LOG_LINES) lignes, troncature √† $(TRUNCATE_TO) lignes..."; \
		tail -n $(TRUNCATE_TO) $(LOG_FILE) > $(LOG_FILE).tmp && mv $(LOG_FILE).tmp $(LOG_FILE); \
	fi
	@nohup node $(ENTRYPOINT) > $(LOG_FILE) 2>&1 & echo $$! > $(PID_FILE)
	@echo "‚úÖ Script lanc√© avec succ√®s (PID: $$(cat $(PID_FILE)))"

stop: ## Arr√™te le script.
	@echo "üõë Arr√™t du script $(NAME)..."
	@if [ ! -f $(PID_FILE) ]; then \
		echo "‚ùå Aucun PID trouv√©. Le script est-il lanc√© ?"; \
		exit 1; \
	fi
	@kill $$(cat $(PID_FILE)) && rm -f $(PID_FILE)
	@echo "‚úÖ Script arr√™t√©."

restart: ## Red√©marre le script.
	@echo "üîÑ Red√©marrage du script $(NAME)..."
	@$(MAKE) stop
	@$(MAKE) start

logs: ## Affiche les logs du script en temps r√©el.
	@echo "üìÑ Logs du script $(NAME):"
	@tail -f $(LOG_FILE)

truncate-logs: ## Tronque le fichier de log √† $(TRUNCATE_TO) lignes.
	@echo "‚úÇÔ∏è  Troncature des logs √† $(TRUNCATE_TO) lignes..."
	@tail -n $(TRUNCATE_TO) $(LOG_FILE) > $(LOG_FILE).tmp && mv $(LOG_FILE).tmp $(LOG_FILE)

status: ## V√©rifie si le script est en cours d'ex√©cution.
	@if [ -f $(PID_FILE) ]; then \
		PID=$$(cat $(PID_FILE)); \
		if ps -p $$PID > /dev/null; then \
			echo "‚úÖ Script $(NAME) est en cours (PID: $$PID)"; \
		else \
			echo "‚ö†Ô∏è  PID trouv√© mais le processus ne tourne plus."; \
			echo "‚ö†Ô∏è  Suppression du fichier PID."; \
			rm -f $(PID_FILE); \
		fi \
	else \
		echo "‚ùå Script $(NAME) non lanc√©."; \
	fi

clean: ## Supprime les fichiers PID et logs.
	@rm -f $(PID_FILE) $(LOG_FILE)
	@echo "üßπ Fichiers PID et logs supprim√©s."

help: ## Affiche cette aide.
	@awk 'BEGIN {FS = ":.*##"; printf "\nCommandes disponibles:\n"} /^[a-zA-Z_-]+:.*##/ { printf "  \033[36m%-20s\033[0m %s\n", $$1, $$2 }' $(MAKEFILE_LIST)
